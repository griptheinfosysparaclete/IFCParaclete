<!-- ========================================================================= -->
<!-- Copyright (c) 1999-2001 Xerox Corporation,                                -->
<!--               2002 Palo Alto Research Center, Incorporated (PARC).        -->
<!-- All rights reserved.                                                      -->
<!-- This program and the accompanying materials are made available            -->
<!-- under the terms of the Eclipse Public License v1.0                        -->
<!-- which accompanies this distribution and is available at                   -->
<!-- http://www.eclipse.org/legal/epl-v10.html                                 -->
<!--                                                                           -->
<!-- Contributors:                                                             -->
<!--     Xerox/PARC     initial implementation                                 -->
<!-- ========================================================================= -->
<project name="aspectj-test" default="helloworld" basedir=".">
    <echo> ${basedir}:  This script builds the AspectJ test.      Relevant targets:      helloworld </echo>
    <property name="ant.task.def.classes.dir" value="../IFCAntTasks/classes"/>
    <echo> ${ant.task.def.classes.dir}:  This script builds the AspectJ test.      Relevant targets:      helloworld </echo>
    
    <target name="info">
        <echo> ${basedir}:  This script builds the AspectJ test.      Relevant targets:      helloworld </echo>
    </target>
    <!-- ============================================================= -->
    <!-- setup and cleanup targets                                     -->
    <!-- ============================================================= -->
    <target name="clean" depends="init" description="clean and create classes/jar dir, .ajesym files">
        <delete quiet="on" dir="${classes.dir}"/>
        <delete quiet="on" dir="${jars.dir}"/>
        <delete quiet="on">
            <fileset dir="${aspectj-test.dir}" includes="**/*.ajesym"/>
        </delete>
        <mkdir dir="${classes.dir}"/>
        <mkdir dir="${jars.dir}"/>
    </target>
    <target name="init" depends="init.variables,init.taskdefs"/>
    <target name="init.variables" description="init variables">
        <!-- build.compiler value to pick up our CompilerAdapter for javac -->
        <property name="ajc.adapter" value="org.aspectj.tools.ant.taskdefs.Ajc11CompilerAdapter"/>
        <!-- required directories - run from examples or predefine -->
        <property name="aspectj-test.dir" location="${basedir}"/>
        <property name="aspectj.lib.dir" location="../lib"/>
        <!-- required libraries - install or predefine -->
        <property name="aspectjrt.jar" location="${aspectj.lib.dir}/aspectjrt.jar"/>
        <property name="aspectjtools.jar" location="${aspectj.lib.dir}/aspectjtools.jar"/>
        <property name="aspectjweaver.jar" location="${aspectj.lib.dir}/aspectjweaver.jar"/>
        <!-- created directories -->
        <property name="classes.dir" location="${basedir}/classes"/>
        <property name="jars.dir" location="${basedir}/jars"/>
        <!-- checking required libraries -->
        <available file="${aspectjtools.jar}" property="aspectjtools.jar.available"/>
        <available file="${aspectjrt.jar}" property="aspectjrt.jar.available"/>
    </target>
    <target name="init.taskdefs"
            depends="init.variables,           aspectjtools.jar.available,          aspectjrt.jar.available"
            unless="taskdefs.init">
        <!-- sets name of new task to iajc, old task to ajc -->
        <taskdef resource="org/aspectj/tools/ant/taskdefs/aspectjTaskdefs.properties">
            <classpath>
                <pathelement path="${aspectjtools.jar}"/>
            </classpath>
        </taskdef>
        <property name="taskdefs.init" value="true"/>
    </target>
    <!-- targets to fail unless required libraries available -->
    <target name="aspectjrt.jar.available" depends="init.variables" unless="aspectjrt.jar.available">
        <fail message="expecting aspectjrt.jar at ${aspectjrt.jar}"/>
    </target>
    <target name="aspectjtools.jar.available" depends="init.variables" unless="aspectjtools.jar.available">
        <fail message="expecting aspectjtools.jar at ${aspectjtools.jar}"/>
    </target>
    <!-- ============================================================= -->
    <!-- these targets compile and run any example                     -->
    <!-- ============================================================= -->
    <target name="Ajx" depends="init" description="compile {list} and run {class} of example">
        <echo message="##### Ajx list=${list} class=${class}"></echo>
        <antcall target="clean"/>
        <!-- can use ajc or iajc here -->
        <iajc source="1.8" target="1.8" destdir="${classes.dir}" argfiles="${list}" fork="true"
              forkclasspath="${aspectjtools.jar}" classpath="${aspectjrt.jar}"/>
        <antcall target="Ajx-run">
            <param name="class" value="${class}"/>
        </antcall>
    </target>
    <target name="Ajx-run" description="run {class} unless {norun} is set" unless="norun">
        <echo message="##### Ajx-run list=${list} class=${class}"></echo>
        <java classname="${class}" fork="yes">
            <classpath>
                <pathelement path="./classes"/>
                <pathelement path="../lib/aspectjtool.jar"/>
            </classpath>
        </java>
    </target>
    <!-- ============================================================= -->
    <!-- aspectj test targets                                               -->
    <!-- ============================================================= -->
    <target name="helloworldbuild" description="build HelloWorld test">
        <property name="norun" value="skip"/>
        <property name="helloworld.dir" value="${basedir}/src/test/output"/>
        <antcall target="Ajx">
            <param name="list" value="${helloworld.dir}/files.lst"/>
            <param name="class" value="test.output.HelloWorld"/>
        </antcall>
    </target>
    <target name="helloworldrun" description="run HelloWorld test">      
        <antcall target="Ajx-run">
            <param name="list" value="files.lst"/>
            <param name="class" value="test.output.HelloWorld"/>
        </antcall>
    </target>
</project>
